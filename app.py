from flask import Flask, render_template, request
import subprocess as sp
import os
from werkzeug.utils import secure_filename
from flask import jsonify
import json

app = Flask(__name__)

@app.route('/')  # Demonstrator Website
def index():
    return render_template('index.html')


@app.route('/start_analysis', methods=['POST'])
def start_analysis():
    
        # check if the post request has the executable part

            #before analysis started

            """
            thisdict = {
                "status": "started"
                }
            with open("status.json", "w") as f:
                json.dump(thisdict, f)
            """

        #after analysis started

            """
            thisdict = {
                "status": "finished"
                }
            with open("status.json", "w") as f:
                json.dump(thisdict, f)
            """
        #after analysis finished
    
    #return result of analysis


#receive link that was selected using context menu
@app.route('/receive', methods=['POST'])
def receive():
    link = request.json
    print(type(link))
    return jsonify(result=True)


#route to reset the status
@app.route('/reset', methods=["POST"])
def reset():
    thisdict = {
  "status": "notStarted"
}
    with open("status.json", "w") as f:
        json.dump(thisdict, f)
    return jsonify(result="test")


#route to check the Status of the analysis
@app.route('/checkStatus', methods=["POST"])
def ckeckStatus():
    f = open('status.json')
    data = json.load(f)
    return jsonify(data["status"])


#only for testing purposes
#Has to be implemented in def result() after starting the analysis process
@app.route("/testStart", methods=["POST"])
def test_start():
    print(request.json)
    thisdict = {
  "status": "started"
}
    with open("status.json", "w") as f:
        json.dump(thisdict, f)
    return jsonify(result="test2")


#only for testing purposes
#Has to be implemented after the analyisis has finished
@app.route("/testFinish", methods=["POST"])
def test_finish():
    print(request.json)
    thisdict = {
  "status": "finished"
}
    with open("status.json", "w") as f:
        json.dump(thisdict, f)
    return jsonify(result="test2")

#get result from result.json
@app.route("/getResult", methods=["POST"])
def getResult():
    return jsonify(result="test")
#load data from result.json and send result to extension

#    f = open('status.json')
#    data = json.load(f)
#    return jsonify(data)

@app.route('/uploader', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        f = request.files['file']
        print(f)
        is_malware = [False, f.filename]
        # f.save(secure_filename(f.filename))
        return render_template('result.html', result=is_malware)



if __name__ == '__main__':
    app.run()
